/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************************************!*\
  !*** ./client/src/default-platform-window.ts ***!
  \***********************************************/
window.addEventListener("DOMContentLoaded", async () => {
    const me = fin.me;
    const CONTAINER_ID = "layout-container";
    await fin.Platform.Layout.init({ containerId: CONTAINER_ID });
    const minimizeBtn = document.querySelector("#minimize-button");
    minimizeBtn.addEventListener("click", async () => {
        await me.minimize().catch(console.error);
    });
    const maximizeBtn = document.querySelector("#expand-button");
    maximizeBtn.addEventListener("click", async () => {
        await maxOrRestore().catch(console.error);
    });
    const closeBtn = document.querySelector("#close-button");
    closeBtn.addEventListener("click", async (e) => {
        await me.close();
    });
    async function maxOrRestore() {
        if ((await me.getState()) === "normal") {
            return me.maximize();
        }
        return me.restore();
    }
    const p = fin.Platform.getCurrentSync();
    await me.on("child-view-created", async (e) => {
        const viewOptions = { url: e.childOptions.url, target: fin.me.identity };
        await p.createView(viewOptions, fin.me.identity);
    });
    await me.on("view-child-view-created", async (e) => {
        const viewOptions = { url: e.childOptions.url, target: fin.me.identity };
        await p.createView(viewOptions, fin.me.identity);
    });
});

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1wbGF0Zm9ybS13aW5kb3cuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ3RELE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFvQixDQUFDO0lBQ3BDLE1BQU0sWUFBWSxHQUFHLGtCQUFrQixDQUFDO0lBQ3hDLE1BQU0sR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7SUFFOUQsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQy9ELFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDaEQsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQyxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3RCxXQUFXLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ2hELE1BQU0sWUFBWSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekQsUUFBUSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDOUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDbEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxLQUFLLFVBQVUsWUFBWTtRQUMxQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxRQUFRLEVBQUU7WUFDdkMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDckI7UUFFRCxPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBQ0QsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsb0JBQW9CLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzdDLE1BQU0sV0FBVyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxXQUFrRCxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekYsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMseUJBQXlCLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2xELE1BQU0sV0FBVyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3pFLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxXQUFrRCxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekYsQ0FBQyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZS1jb250ZW50LWNyZWF0aW9uLXJ1bGVzLy4vY2xpZW50L3NyYy9kZWZhdWx0LXBsYXRmb3JtLXdpbmRvdy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgYXN5bmMgKCkgPT4ge1xuXHRjb25zdCBtZSA9IGZpbi5tZSBhcyBPcGVuRmluLldpbmRvdztcblx0Y29uc3QgQ09OVEFJTkVSX0lEID0gXCJsYXlvdXQtY29udGFpbmVyXCI7XG5cdGF3YWl0IGZpbi5QbGF0Zm9ybS5MYXlvdXQuaW5pdCh7IGNvbnRhaW5lcklkOiBDT05UQUlORVJfSUQgfSk7XG5cblx0Y29uc3QgbWluaW1pemVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21pbmltaXplLWJ1dHRvblwiKTtcblx0bWluaW1pemVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jICgpID0+IHtcblx0XHRhd2FpdCBtZS5taW5pbWl6ZSgpLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuXHR9KTtcblxuXHRjb25zdCBtYXhpbWl6ZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZXhwYW5kLWJ1dHRvblwiKTtcblx0bWF4aW1pemVCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jICgpID0+IHtcblx0XHRhd2FpdCBtYXhPclJlc3RvcmUoKS5jYXRjaChjb25zb2xlLmVycm9yKTtcblx0fSk7XG5cblx0Y29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Nsb3NlLWJ1dHRvblwiKTtcblx0Y2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jIChlKSA9PiB7XG5cdFx0YXdhaXQgbWUuY2xvc2UoKTtcblx0fSk7XG5cblx0YXN5bmMgZnVuY3Rpb24gbWF4T3JSZXN0b3JlKCkge1xuXHRcdGlmICgoYXdhaXQgbWUuZ2V0U3RhdGUoKSkgPT09IFwibm9ybWFsXCIpIHtcblx0XHRcdHJldHVybiBtZS5tYXhpbWl6ZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiBtZS5yZXN0b3JlKCk7XG5cdH1cblx0Y29uc3QgcCA9IGZpbi5QbGF0Zm9ybS5nZXRDdXJyZW50U3luYygpO1xuXHRhd2FpdCBtZS5vbihcImNoaWxkLXZpZXctY3JlYXRlZFwiLCBhc3luYyAoZSkgPT4ge1xuXHRcdGNvbnN0IHZpZXdPcHRpb25zID0geyB1cmw6IGUuY2hpbGRPcHRpb25zLnVybCwgdGFyZ2V0OiBmaW4ubWUuaWRlbnRpdHkgfTtcblx0XHRhd2FpdCBwLmNyZWF0ZVZpZXcodmlld09wdGlvbnMgYXMgT3BlbkZpbi5QbGF0Zm9ybVZpZXdDcmVhdGlvbk9wdGlvbnMsIGZpbi5tZS5pZGVudGl0eSk7XG5cdH0pO1xuXG5cdGF3YWl0IG1lLm9uKFwidmlldy1jaGlsZC12aWV3LWNyZWF0ZWRcIiwgYXN5bmMgKGUpID0+IHtcblx0XHRjb25zdCB2aWV3T3B0aW9ucyA9IHsgdXJsOiBlLmNoaWxkT3B0aW9ucy51cmwsIHRhcmdldDogZmluLm1lLmlkZW50aXR5IH07XG5cdFx0YXdhaXQgcC5jcmVhdGVWaWV3KHZpZXdPcHRpb25zIGFzIE9wZW5GaW4uUGxhdGZvcm1WaWV3Q3JlYXRpb25PcHRpb25zLCBmaW4ubWUuaWRlbnRpdHkpO1xuXHR9KTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9